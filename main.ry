import logging
import requests
from bs4 import BeautifulSoup
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

logging.basicConfig(level=logging.INFO)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Привіт! Я бот новин України. Напиши /news щоб отримати останні новини.")

def get_news():
    url = 'https://tsn.ua/rss'
    response = requests.get(url)
    soup = BeautifulSoup(response.content, features="xml")
    items = soup.findAll('item')[:5]
    news = ""
    for item in items:
        title = item.title.text
        link = item.link.text
        news += f"{title}\n{link}\n\n"
    return news

async def news(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Завантажую новини...")
    try:
        news_text = get_news()
        await update.message.reply_text(news_text)
    except Exception as e:
        await update.message.reply_text("Не вдалося отримати новини.")

if __name__ == '__main__':
    import os
    TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
    if not TOKEN:
        print("TELEGRAM_BOT_TOKEN не знайдено!")
        exit()

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("news", news))

    app.run_polling()
